//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Account {
  id String [pk]
  userId String [not null]
  type String [not null]
  provider String [not null]
  providerAccountId String [not null]
  refresh_token String
  access_token String
  expires_at Int
  token_type String
  scope String
  id_token String
  session_state String
  user User [not null]

  indexes {
    (provider, providerAccountId) [unique]
  }
}

Table Session {
  id String [pk]
  sessionToken String [unique, not null]
  userId String [not null]
  expires DateTime [not null]
  user User [not null]
}

Table VerificationToken {
  identifier String [not null]
  token String [unique, not null]
  expires DateTime [not null]

  indexes {
    (identifier, token) [unique]
  }
}

Table User {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  email String [unique, not null]
  emailVerified DateTime
  username String [unique]
  name String
  image String
  accounts Account [not null]
  sessions Session [not null]
  role Role [not null, default: 'USER']
  nudgesSent Nudge [not null]
  nudgesReceived Nudge [not null]
  circleInvitesReceived CircleInvite [not null]
  circleInvitesSent CircleInvite [not null]
  notifications Notification [not null]
  tasks Task [not null]
  circles UserCircle [not null]
}

Table Circle {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [not null]
  adminId String [not null]
  members UserCircle [not null]
  invites CircleInvite [not null]
}

Table UserCircle {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  user User [not null]
  userId String [not null]
  circle Circle [not null]
  circleId String [not null]
  role CircleRole [not null, default: 'MEMBER']
  tasks Task [not null]
}

Table CircleInvite {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  sender User [not null]
  senderId String [not null]
  recipient User [not null]
  recipientId String [not null]
  circle Circle [not null]
  circleId String [not null]
  status InviteStatus [not null]
}

Table Task {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  title String [not null]
  description String
  dueDate DateTime
  completed Boolean [not null, default: false]
  public Boolean [not null, default: false]
  consequence String
  nudgeCount Int [not null, default: 0]
  nudges Nudge [not null]
  tags Tag [not null]
  user User [not null]
  userId String [not null]
  circles UserCircle [not null]
}

Table Tag {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [unique, not null]
  tasks Task [not null]
}

Table Nudge {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  message String [not null, default: 'You can do it âœ”']
  sender User [not null]
  receiver User [not null]
  task Task [not null]
  senderId String [not null]
  receiverId String [not null]
  taskId String [not null]
}

Table Notification {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  user User [not null]
  userId String [not null]
  content String [not null]
  type NotificationType [not null]
  seen Boolean [not null, default: false]
}

Enum Role {
  USER
  ADMIN
}

Enum CircleRole {
  MEMBER
  ADMIN
}

Enum InviteStatus {
  PENDING
  ACCEPTED
  DECLINED
}

Enum NotificationType {
  TASK_DEADLINE
  NEW_NUDGE
  CIRCLE_INVITE
  FRIEND_REQUEST
}

Ref: Account.userId > User.id [delete: Cascade]

Ref: Session.userId > User.id [delete: Cascade]

Ref: UserCircle.userId > User.id [delete: Cascade]

Ref: UserCircle.circleId > Circle.id [delete: Cascade]

Ref: CircleInvite.senderId > User.id

Ref: CircleInvite.recipientId > User.id

Ref: CircleInvite.circleId > Circle.id

Ref: Task.userId > User.id [delete: Cascade]

Ref: Nudge.senderId > User.id [delete: Cascade]

Ref: Nudge.receiverId > User.id [delete: Cascade]

Ref: Nudge.taskId > Task.id [delete: Cascade]

Ref: Notification.userId > User.id [delete: Cascade]